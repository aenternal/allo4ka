version: '3'

services:

  bot:
    build:
      context: .
      dockerfile: DockerfilePython
    image: bot_img
    env_file:
      - .env
    environment:
      ALLO4KA_API_KEY: ${ALLO4KA_API_KEY}
    volumes:
      - ./src:/app/src/
      - ./pyproject.toml:/app/pyproject.toml
    ports:
      - '8000:8000'
    depends_on:
      - redis
    command: bash -c "cd src && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"

  redis:
    image: redis:latest
    container_name: rediss
    command: --port ${REDIS_PORT}
    expose:
      - ${REDIS_PORT}
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    ports:
      - '127.0.0.1:6379:6379'

  mongo:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}

  celery:
    build:
      context: .
      dockerfile: DockerfilePython
    env_file:
      - .env
    container_name: celery
    volumes:
      - ./src:/app/src/
    command: bash -c "celery -A src.tasks.tasks:celery worker --loglevel=info"
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
    links:
      - "redis:redis"
    depends_on:
      - redis
      - bot
